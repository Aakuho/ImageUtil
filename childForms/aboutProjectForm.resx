<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label3.Text" xml:space="preserve">
    <value>Originally, this program was supposed to be a "scripting image editor", where the user could make his own
set of instructions for each individual image ( ex. crop 0 400, flip horizontal ) 
or save the instructions as a script and execute it on all image loaded.
</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Due to time constraints, Image Util is only a easy-to-use image converter.
The project is easily expandable. The windows themselves are child forms from Visual Studio. 
This way, a new form can be added easily.
New formats also can be added. The program by default tries to convert the image via the default converter I wrote. 
If it fails, a new class can be constructed where anyone can write their own converter.</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>ImageUtil is my first program I would actually give someone to use. Not only that, it was made with minimal experience in C#,
that is why I called it more of an experiment, rather than confidently saying it's a 10/10 program first try.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>